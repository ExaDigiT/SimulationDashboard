import { ColumnHeader } from "../../../models/dataGrid/columnHeader.model";
import { FilterOperators } from "../../../models/filters/filterOperators.enum";

export const headers: ColumnHeader[] = [
  {
    activeFilters: [],
    inputType: "text",
    name: "Id",
    operators: [
      FilterOperators.Contains,
      FilterOperators.DoesNotContain,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.StartsWith,
      FilterOperators.EndsWith,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
      FilterOperators.MinimumLength,
      FilterOperators.MaxiumumLength,
    ],
    propertyName: "job_id",
    sort: { sortable: true, sorted: true, direction: "asc" },
    size: "small",
  },
  {
    activeFilters: [],
    inputType: "text",
    name: "Name",
    propertyName: "name",
    sort: { sortable: true, sorted: false, direction: null },
    operators: [
      FilterOperators.Contains,
      FilterOperators.DoesNotContain,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.StartsWith,
      FilterOperators.EndsWith,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
      FilterOperators.MinimumLength,
      FilterOperators.MaxiumumLength,
    ],
    size: "small",
  },
  {
    activeFilters: [],
    inputType: "text",
    name: "State",
    operators: [
      FilterOperators.Contains,
      FilterOperators.DoesNotContain,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.StartsWith,
      FilterOperators.EndsWith,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
      FilterOperators.MinimumLength,
      FilterOperators.MaxiumumLength,
    ],
    propertyName: "state_current",
    sort: { sortable: true, sorted: false, direction: null },
    size: "small",
  },
  {
    activeFilters: [],
    name: "Node Count",
    propertyName: "node_count",
    inputType: "text",
    operators: [
      FilterOperators.GreaterThan,
      FilterOperators.GreaterThanOrEqual,
      FilterOperators.LessThan,
      FilterOperators.LessThanOrEqual,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
    ],
    sort: { sortable: true, sorted: false, direction: null },
    size: "small",
  },
  {
    activeFilters: [],
    name: "Submission Time",
    propertyName: "time_submission",
    inputType: "datetime",
    operators: [
      FilterOperators.GreaterThan,
      FilterOperators.GreaterThanOrEqual,
      FilterOperators.LessThan,
      FilterOperators.LessThanOrEqual,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
    ],
    sort: { sortable: true, sorted: false, direction: null },
    size: "large",
  },
  {
    activeFilters: [],
    name: "Time Limit",
    propertyName: "time_limit",
    inputType: "text",
    operators: [
      FilterOperators.GreaterThan,
      FilterOperators.GreaterThanOrEqual,
      FilterOperators.LessThan,
      FilterOperators.LessThanOrEqual,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
    ],
    sort: { sortable: true, sorted: false, direction: null },
    size: "small",
  },
  {
    activeFilters: [],
    name: "Start Time",
    propertyName: "time_start",
    inputType: "datetime",
    operators: [
      FilterOperators.GreaterThan,
      FilterOperators.GreaterThanOrEqual,
      FilterOperators.LessThan,
      FilterOperators.LessThanOrEqual,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
    ],
    sort: { sortable: true, sorted: false, direction: null },
    size: "medium",
  },
  {
    activeFilters: [],
    name: "End Time",
    propertyName: "time_end",
    inputType: "datetime",
    operators: [
      FilterOperators.GreaterThan,
      FilterOperators.GreaterThanOrEqual,
      FilterOperators.LessThan,
      FilterOperators.LessThanOrEqual,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
    ],
    sort: { sortable: true, sorted: false, direction: null },
    size: "medium",
  },
];
