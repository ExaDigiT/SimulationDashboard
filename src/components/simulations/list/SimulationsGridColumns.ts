import { FilterOperators } from "../../../models/filters/filterOperators.enum";
import { ColumnHeader } from "../../../models/dataGrid/columnHeader.model";

export const columns: ColumnHeader[] = [
  {
    name: "Id",
    propertyName: "id",
    operators: [
      FilterOperators.Contains,
      FilterOperators.DoesNotContain,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.StartsWith,
      FilterOperators.EndsWith,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
      FilterOperators.MinimumLength,
      FilterOperators.MaxiumumLength,
    ],
    activeFilters: [],
    sort: { sortable: true, direction: null },
    inputType: "text",
  },
  {
    name: "State",
    propertyName: "state",
    operators: [
      FilterOperators.Contains,
      FilterOperators.DoesNotContain,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.StartsWith,
      FilterOperators.EndsWith,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
      FilterOperators.MinimumLength,
      FilterOperators.MaxiumumLength,
    ],
    activeFilters: [],
    sort: { sortable: true, direction: null },
    inputType: "select",
    selectOptions: [
      { label: "Running", value: "running" },
      { label: "Success", value: "success" },
      { label: "Failure", value: "fail" },
    ],
  },
  {
    name: "User",
    propertyName: "user",
    operators: [
      FilterOperators.Contains,
      FilterOperators.DoesNotContain,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.StartsWith,
      FilterOperators.EndsWith,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
      FilterOperators.MinimumLength,
      FilterOperators.MaxiumumLength,
    ],
    activeFilters: [],
    sort: { sortable: true, direction: null },
    inputType: "text",
  },
  {
    name: "Jobs Mode",
    propertyName: "jobs_mode",
    operators: [],
    activeFilters: [],
    inputType: "text",
    sort: { sortable: false, direction: null },
    filterable: false,
  },
  {
    name: "Logical Start",
    propertyName: "logical_start",
    operators: [
      FilterOperators.GreaterThan,
      FilterOperators.GreaterThanOrEqual,
      FilterOperators.LessThan,
      FilterOperators.LessThanOrEqual,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
    ],
    activeFilters: [],
    sort: { sortable: true, direction: null },
    inputType: "datetime",
  },
  {
    name: "Logical End",
    propertyName: "logical_end",
    operators: [
      FilterOperators.GreaterThan,
      FilterOperators.GreaterThanOrEqual,
      FilterOperators.LessThan,
      FilterOperators.LessThanOrEqual,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
    ],
    activeFilters: [],
    sort: { sortable: true, direction: null },
    inputType: "datetime",
  },
  {
    name: "Execution Start",
    propertyName: "execution_start",
    operators: [
      FilterOperators.GreaterThan,
      FilterOperators.GreaterThanOrEqual,
      FilterOperators.LessThan,
      FilterOperators.LessThanOrEqual,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
    ],
    activeFilters: [],
    sort: { sortable: true, direction: "desc" },
    inputType: "datetime",
  },
  {
    name: "Execution End",
    propertyName: "execution_end",
    operators: [
      FilterOperators.GreaterThan,
      FilterOperators.GreaterThanOrEqual,
      FilterOperators.LessThan,
      FilterOperators.LessThanOrEqual,
      FilterOperators.Equals,
      FilterOperators.DoesNotEqual,
      FilterOperators.OneOf,
      FilterOperators.NotOneOf,
    ],
    activeFilters: [],
    sort: { sortable: true, direction: null },
    inputType: "datetime",
  },
] as const;
